test1 = \x, y, z -> x * y + z(x)(y)

test2 = (\x -> (x.foo)(false))({ foo : \_ -> 1 })

test3 = (\x, y -> x)(1 + 2 * (1 + 2), true && (false || false))

k = \x -> \y -> x

test4 = 1 `k` 2

(%%) = \x -> \y -> x * y + y

test5 = 1 %% 2 %% 3

test6 = ((\x -> x) `k` 2) (3)
